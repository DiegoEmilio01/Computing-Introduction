TIPS TC2
1.- Subrayar las llaves, en las tablas de relacion se usan llaves.
2.- Cardinalidades 1 por lado, Ej: []n - <> - 1[].
3.- COMANDOS:
SELECT color, marca FROM 'AUTOS'; seleccionar de una tabla.
SELECT * FROM 'AUTOS' WHERE precio>15000;  seleccionar con una condicion.
SELECT marca, nombre FROM AUTOS, PERSONAS WHERE dueño=rut; cruzar tablas (con PERSONAS.marca no se confunde la información).
SELECT a.marca, a.id FROM AUTOS a; renombrar la tabla para comandos largos.
SELECT AVG(precio), MAX(precio), MIN(precio) FROM AUTOS; promedio, max y min.
ORDEN: SELECT FROM WHERE etc...
SELECT AVG(precio), marca FROM AUTOS GROUP BY marca HAVING AVG(precio)>1000 ORDER BY marca;


SELECT f.CustomerId, f.FirstName, f.LastName, SUM(h.Quantity)
FROM customers a, invoices b, invoice_items c, tracks d, genres e, customers f, invoices g, invoice_items h
WHERE a.CustomerId = b.CustomerId AND b.InvoiceId = c.InvoiceId AND c.TrackId = d.TrackId AND d.GenreId = e.GenreId AND e.Name = "Rock" AND d.Composer LIKE "%Mike%" AND a.CustomerId = f.CustomerId AND f.CustomerId = g.CustomerId AND g.InvoiceId = h.InvoiceId
GROUP BY a.CustomerId
HAVING SUM(c.Quantity) > 2
ORDER BY SUM(c.Quantity) DESC;



select f.CustomerId, f.FirstName, f.LastName, sum(Quantity)
from customers f, invoices g, invoice_items h
where f.CustomerId = g.CustomerId and g.InvoiceId = h.InvoiceId 
and f.CustomerId in (
	SELECT distinct b.CustomerId
	FROM invoices b, invoice_items c, tracks d, genres e
	WHERE b.InvoiceId = c.InvoiceId AND c.TrackId = d.TrackId AND d.GenreId = e.GenreId 
	AND e.Name = "Rock" AND d.Composer LIKE "%Mike%" 
	GROUP BY b.CustomerId
	HAVING sum(c.quantity) > 2)
 group by f.CustomerId, f.FirstName, f.LastName
